<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title></title>
  <link href="../Styles/javaee-darb.css" rel="stylesheet" type="text/css" />
</head>

<body>
  <div class="ind">
    <a id="GLNVI"></a><a id="JEETT00114"></a>

    <h1 class="chapter"><span class="secnum">57</span> <a id="sthref3052"></a>Duke's Bookstore Case Study Example</h1>

    <p>The Duke's Bookstore example is a simple e-commerce application that illustrates some of the more advanced features of JavaServer Faces technology in combination with Contexts and Dependency Injection for Java EE (CDI), enterprise beans, and the Java Persistence API. Users can select books from an image map, view the bookstore catalog, and purchase books. No security is used in this application.</p>

    <p>The following topics are addressed here:</p>

    <ul>
      <li>
        <p><a href="../Text/dukes-bookstore.xhtml#GLOAW">Design and Architecture of Duke's Bookstore</a></p>
      </li>

      <li>
        <p><a href="../Text/dukes-bookstore.xhtml#GLQFD">The Duke's Bookstore Interface</a></p>
      </li>

      <li>
        <p><a href="../Text/dukes-bookstore.xhtml#GLPPQ">Running the Duke's Bookstore Case Study Application</a></p>
      </li>
    </ul>
  </div>

  <div class="ind">
    <a id="GLOAW"></a><a id="JEETT00566"></a>

    <div class="sect1">
      <h1 class="sect1"><span class="secnum">57.1</span> Design and Architecture of Duke's Bookstore</h1>

      <p>Duke's Bookstore is a simple web application that uses many features of JavaServer Faces technology, in addition to other Java EE 7 features:</p>

      <ul>
        <li>
          <p>JavaServer Faces technology, as well as Contexts and Dependency Injection for Java EE (CDI)</p>

          <ul>
            <li>
              <p>A set of Facelets pages, along with a template, provides the user interface to the application.</p>
            </li>

            <li>
              <p>CDI managed beans are associated with each of the Facelets pages.</p>
            </li>

            <li>
              <p>A custom image map component on the front page allows you to select a book to enter the store. Each area of the map is represented by a JavaServer Faces managed bean. Text hyperlinks are also provided for accessibility.</p>
            </li>

            <li>
              <p>Action listeners are registered on the image map and the text links. These listeners retrieve the ID value for the selected book and store it in the session map so it can be retrieved by the managed bean for the next page.</p>
            </li>

            <li>
              <p>The <code>h:dataTable</code> tag is used to render the book catalog and shopping cart contents dynamically.</p>
            </li>

            <li>
              <p>A custom converter is registered on the credit card field on the checkout page, <code>bookcashier.xhtml</code>, which also uses an <code>f:validateRegEx</code> tag to ensure that the input is correctly formatted.</p>
            </li>

            <li>
              <p>A value-change listener is registered on the name field on <code>bookcashier.xhtml</code>. This listener saves the name in a parameter so the following page, <code>bookreceipt.xhtml</code>, can access it.</p>
            </li>
          </ul>
        </li>

        <li>
          <p>Enterprise beans: Local, no-interface-view stateless session bean and singleton bean</p>
        </li>

        <li>
          <p>A Java Persistence API entity</p>
        </li>
      </ul>

      <p>The packages of the Duke's Bookstore application, located in the <span class="variable">tut-install</span><code>/examples/case-studies/dukes-bookstore/src/main/java/javaeetutorial/dukesbookstore/</code> directory, are as follows:</p>

      <ul>
        <li>
          <p><code>components</code>: Includes the custom UI component classes, <code>MapComponent</code> and <code>AreaComponent</code></p>
        </li>

        <li>
          <p><code>converters</code>: Includes the custom converter class, <code>CreditCardConverter</code></p>
        </li>

        <li>
          <p><code>ejb</code>: Includes two enterprise beans:</p>

          <ul>
            <li>
              <p>A singleton bean, <code>ConfigBean</code>, that initializes the data in the database</p>
            </li>

            <li>
              <p>A stateless session bean, <code>BookRequestBean</code>, that contains the business logic to manage the entity</p>
            </li>
          </ul>
        </li>

        <li>
          <p><code>entity</code>: Includes the <code>Book</code> entity class</p>
        </li>

        <li>
          <p><code>exceptions</code>: Includes three exception classes</p>
        </li>

        <li>
          <p><code>listeners</code>: Includes the event handler and event listener classes</p>
        </li>

        <li>
          <p><code>model</code>: Includes a model JavaBeans class</p>
        </li>

        <li>
          <p><code>renderers</code>: Includes the custom renderers for the custom UI component classes</p>
        </li>

        <li>
          <p><code>web.managedbeans</code>: Includes the managed beans for the Facelets pages</p>
        </li>

        <li>
          <p><code>web.messages</code>: Includes the resource bundle files for localized messages</p>
        </li>
      </ul>
    </div>
  </div>

  <div class="ind">
    <a id="GLQFD"></a><a id="JEETT00567"></a>

    <div class="sect1">
      <h1 class="sect1"><span class="secnum">57.2</span> The Duke's Bookstore Interface</h1>

      <p>This section provides additional detail regarding the components of the Duke's Bookstore example and how they interact.</p><a id="GLQER"></a><a id="JEETT01320"></a>

      <div class="sect2">
        <h2 class="sect2"><span class="secnum">57.2.1</span> The Book Java Persistence API Entity</h2>

        <p>The <code>Book</code> entity, located in the <code>dukesbookstore.entity</code> package, encapsulates the book data stored by Duke's Bookstore.</p>

        <p>The <code>Book</code> entity defines attributes used in the example:</p>

        <ul>
          <li>
            <p>A book ID</p>
          </li>

          <li>
            <p>The author's first name</p>
          </li>

          <li>
            <p>The author's surname</p>
          </li>

          <li>
            <p>The title</p>
          </li>

          <li>
            <p>The price</p>
          </li>

          <li>
            <p>Whether the book is on sale</p>
          </li>

          <li>
            <p>The publication year</p>
          </li>

          <li>
            <p>A description of the book</p>
          </li>

          <li>
            <p>The number of copies in the inventory</p>
          </li>
        </ul>

        <p>The <code>Book</code> entity also defines a simple named query, <code>findBooks</code>.</p>
      </div><a id="GLQEU"></a><a id="JEETT01321"></a>

      <div class="sect2">
        <h2 class="sect2"><span class="secnum">57.2.2</span> Enterprise Beans Used in Duke's Bookstore</h2>

        <p>Two enterprise beans located in the <code>dukesbookstore.ejb</code> package provide the business logic for Duke's Bookstore.</p>

        <ul>
          <li>
            <p><code>BookRequestBean</code> is a stateful session bean that contains the business methods for the application. The methods create, retrieve, and purchase books, and update the inventory for a book. To retrieve the books, the <code>getBooks</code> method calls the <code>findBooks</code> named query defined in the <code>Book</code> entity.</p>
          </li>

          <li>
            <p><code>ConfigBean</code> is a singleton session bean used to create the books in the catalog when the application is initially deployed. It calls the <code>createBook</code> method defined in <code>BookRequestBean</code>.</p>
          </li>
        </ul>
      </div><a id="GLQDP"></a><a id="JEETT01322"></a>

      <div class="sect2">
        <h2 class="sect2"><span class="secnum">57.2.3</span> Facelets Pages and Managed Beans Used in Duke's Bookstore</h2>

        <p>The Duke's Bookstore application uses Facelets and its templating features to display the user interface. The Facelets pages interact with a set of CDI managed beans that act as backing beans, providing the underlying properties and methods for the user interface. The front page also interacts with the custom components used by the application.</p>

        <p>The application uses the following Facelets pages, which are located in the <span class="variable">tut-install</span><code>/examples/case-studies/dukes-bookstore/src/main/webapp/</code> directory.</p>

        <ul>
          <li>
            <p><code>bookstoreTemplate.xhtml</code>: The template file, which specifies a header used on every page as well as the style sheet used by all the pages. The template also retrieves the language set in the web browser.</p>

            <p>Uses the <code>LocaleBean</code> managed bean.</p>
          </li>

          <li>
            <p><code>index.xhtml</code>: Landing page, which lays out the custom map and area components using managed beans configured in the <code>faces-config.xml</code> file and allows the user to select a book and advance to the <code>bookstore.xhtml</code> page.</p>
          </li>

          <li>
            <p><code>bookstore.xhtml</code>: Page that allows the user to obtain details on the selected book or the featured book, to add either book to the shopping cart, and to advance to the <code>bookcatalog.xhtml</code> page.</p>

            <p>Uses the <code>BookstoreBean</code> managed bean.</p>
          </li>

          <li>
            <p><code>bookdetails.xhtml</code>: Page that shows details on a book selected from <code>bookstore.xhtml</code> or other pages and allows the user to add the book to the cart and/or advance to the <code>bookcatalog.xhtml</code> page.</p>

            <p>Uses the <code>BookDetailsBean</code> managed bean.</p>
          </li>

          <li>
            <p><code>bookcatalog.xhtml</code>: Page that displays the books in the catalog and allows the user to add books to the shopping cart, view the details for any book, view the shopping cart, empty the shopping cart, or purchase the books in the shopping cart.</p>

            <p>Uses the <code>BookstoreBean</code>, <code>CatalogBean</code>, and <code>ShoppingCart</code> managed beans.</p>
          </li>

          <li>
            <p><code>bookshowcart.xhtml</code>: Page that displays the contents of the shopping cart and allows the user to remove items, view the details for an item, empty the shopping cart, purchase the books in the shopping cart, or return to the catalog.</p>

            <p>Uses the <code>ShowCartBean</code> and <code>ShoppingCart</code> managed beans.</p>
          </li>

          <li>
            <p><code>bookcashier.xhtml</code>: Page that allows the user to purchase books, specify a shipping option, subscribe to newsletters, or join the Duke Fan Club with a purchase over a certain amount.</p>

            <p>Uses the <code>CashierBean</code> and <code>ShoppingCart</code> managed beans.</p>
          </li>

          <li>
            <p><code>bookreceipt.xhtml</code>: Page that confirms the user's purchase and allows the user to return to the catalog page to continue shopping.</p>

            <p>Uses the <code>CashierBean</code> managed bean.</p>
          </li>

          <li>
            <p><code>bookordererror.xhtml</code>: Page rendered by <code>CashierBean</code> if the bookstore has no more copies of a book that was ordered.</p>
          </li>
        </ul>

        <p>The application uses the following managed beans, which are located in the <span class="variable">tut-install</span><code>/examples/case-studies/dukes-bookstore/src/main/java/javaeetutorial/dukesbookstore/web/managedbeans/</code> directory.</p>

        <ul>
          <li>
            <p><code>AbstractBean</code>: Contains utility methods called by other managed beans.</p>
          </li>

          <li>
            <p><code>BookDetailsBean</code>: Backing bean for the <code>bookdetails.xhtml</code> page. Specifies the name <code>details</code>.</p>
          </li>

          <li>
            <p><code>BookstoreBean</code>: Backing bean for the <code>bookstore.xhtml</code> page. Specifies the name <code>store</code>.</p>
          </li>

          <li>
            <p><code>CashierBean</code>: Backing bean for the <code>bookcashier.xhtml</code> and <code>bookreceipt.xhtml</code> pages.</p>
          </li>

          <li>
            <p><code>CatalogBean</code>: Backing bean for the <code>bookcatalog.xhtml</code> page. Specifies the name <code>catalog</code>.</p>
          </li>

          <li>
            <p><code>LocaleBean</code>: Managed bean that retrieves the current locale; used on each page.</p>
          </li>

          <li>
            <p><code>ShoppingCart</code>: Backing bean used by the <code>bookcashier.xhtml</code>, <code>bookcatalog.xhtml</code>, and <code>bookshowcart.xhtml</code> pages. Specifies the name <code>cart</code>.</p>
          </li>

          <li>
            <p><code>ShoppingCartItem</code>: Contains methods called by <code>ShoppingCart</code>, <code>CatalogBean</code>, and <code>ShowCartBean</code>.</p>
          </li>

          <li>
            <p><code>ShowCartBean</code>: Backing bean for the <code>bookshowcart.xhtml</code> page. Specifies the name <code>showcart</code>.</p>
          </li>
        </ul>
      </div><a id="GLQDX"></a><a id="JEETT01323"></a>

      <div class="sect2">
        <h2 class="sect2"><span class="secnum">57.2.4</span> Custom Components and Other Custom Objects Used in Duke's Bookstore</h2>

        <p>The map and area custom components for Duke's Bookstore, along with associated renderer, listener, and model classes, are defined in the following packages in the <span class="variable">tut-install</span><code>/examples/case-studies/dukes-bookstore/src/main/java/javaeetutorial/dukesbookstore/</code> directory.</p>

        <ul>
          <li>
            <p><code>components</code>: Contains the <code>MapComponent</code> and <code>AreaComponent</code> classes. See <a href="../Text/jsf-custom.xhtml#BNAVU">Creating Custom Component Classes</a>.</p>
          </li>

          <li>
            <p><code>listeners</code>: Contains the <code>AreaSelectedEvent</code> class, along with other listener classes. See <a href="../Text/jsf-custom.xhtml#BNAWD">Handling Events for Custom Components</a>.</p>
          </li>

          <li>
            <p><code>model</code>: Contains the <code>ImageArea</code> class. See <a href="../Text/jsf-custom.xhtml#GLPBO">Configuring Model Data</a> for more information.</p>
          </li>

          <li>
            <p><code>renderers</code>: Contains the <code>MapRenderer</code> and <code>AreaRenderer</code> classes. See <a href="../Text/jsf-custom.xhtml#BNAWA">Delegating Rendering to a Renderer</a>.</p>
          </li>
        </ul>

        <p>The <span class="variable">tut-install</span><code>/examples/case-studies/dukes-bookstore/src/java/dukesbookstore/</code> directory also contains a custom converter and other custom listeners not specifically tied to the custom components.</p>

        <ul>
          <li>
            <p><code>converters</code>: Contains the <code>CreditCardConverter</code> class. See <a href="../Text/jsf-custom.xhtml#BNAUS">Creating and Using a Custom Converter</a>.</p>
          </li>

          <li>
            <p><code>listeners</code>: Contains the <code>LinkBookChangeListener</code>, <code>MapBookChangeListener</code>, and <code>NameChanged</code> classes. See <a href="../Text/jsf-custom..xhtml#BNAUT">Implementing an Event Listener</a>.</p>
          </li>
        </ul>
      </div><a id="GLQDG"></a><a id="JEETT01324"></a>

      <div class="sect2">
        <h2 class="sect2"><span class="secnum">57.2.5</span> Properties Files Used in Duke's Bookstore</h2>

        <p>The strings used in the Duke's Bookstore application are encapsulated into resource bundles to allow the display of localized strings in multiple locales. The properties files, located in the <span class="variable">tut-install</span><code>/examples/case-studies/dukes-bookstore/src/main/java/javaeetutorial/dukesbookstore/web/messages/</code> directory, consist of a default file containing English strings and three additional files for other locales. The files are as follows:</p>

        <ul>
          <li>
            <p><code>Messages.properties</code>: Default file, containing English strings</p>
          </li>

          <li>
            <p><code>Messages_de.properties</code>: File containing German strings</p>
          </li>

          <li>
            <p><code>Messages_es.properties</code>: File containing Spanish strings</p>
          </li>

          <li>
            <p><code>Messages_fr.properties</code>: File containing French strings</p>
          </li>
        </ul>

        <p>The language setting in the user's web browser determines which locale is used. The <code>html</code> tag in <code>bookstoreTemplate.xhtml</code> retrieves the language setting from the <code>language</code> property of <code>LocaleBean</code>:</p>
        <pre class="oac_no_warn" xml:space="preserve" xmlns:xml="http://www.w3.org/XML/1998/namespace">&lt;html lang="#{localeBean.language}"
...</pre>

        <p>For more information about resource bundles, see <a href="../Text/webi18n.xhtml#BNAXU">Chapter 20, "Internationalizing and Localizing Web Applications."</a></p>

        <p>The resource bundle is configured as follows in the <code>faces-config.xml</code> file:</p>
        <pre class="oac_no_warn" xml:space="preserve" xmlns:xml="http://www.w3.org/XML/1998/namespace">&lt;application&gt;
    &lt;resource-bundle&gt;
        &lt;base-name&gt;
            javaeetutorial.dukesbookstore.web.messages.Messages
        &lt;/base-name&gt;
        &lt;var&gt;bundle&lt;/var&gt;
    &lt;/resource-bundle&gt;
    &lt;locale-config&gt;
        &lt;default-locale&gt;en&lt;/default-locale&gt;
        &lt;supported-locale&gt;de&lt;/supported-locale&gt;
        &lt;supported-locale&gt;es&lt;/supported-locale&gt;
        &lt;supported-locale&gt;fr&lt;/supported-locale&gt;
    &lt;/locale-config&gt;
&lt;/application&gt;</pre>

        <p>This configuration means that in the Facelets pages, messages are retrieved using the prefix <code>bundle</code> with the key found in the <code>Messages_</code><span class="variable">locale</span><code>.properties</code> file, as in the following example from the <code>index.xhtml</code> page:</p>
        <pre class="oac_no_warn" xml:space="preserve" xmlns:xml="http://www.w3.org/XML/1998/namespace">&lt;h:outputText style="font-weight:bold" 
              value="#{bundle.ChooseBook}" /&gt;</pre>

        <p>In <code>Messages.properties</code>, the key string is defined as follows:</p>
        <pre class="oac_no_warn" xml:space="preserve" xmlns:xml="http://www.w3.org/XML/1998/namespace">ChooseBook=Choose a Book from our Catalog</pre>
      </div><a id="GLQED"></a><a id="JEETT01325"></a>

      <div class="sect2">
        <h2 class="sect2"><span class="secnum">57.2.6</span> Deployment Descriptors Used in Duke's Bookstore</h2>

        <p>The following deployment descriptors are used in Duke's Bookstore:</p>

        <ul>
          <li>
            <p><code>src/main/resources/META-INF/persistence.xml</code>: The Java Persistence API configuration file</p>
          </li>

          <li>
            <p><code>src/main/webapp/WEB-INF/bookstore.taglib.xml</code>: The tag library descriptor file for the custom components</p>
          </li>

          <li>
            <p><code>src/main/webapp/WEB-INF/faces-config.xml</code>: The JavaServer Faces configuration file, which configures the managed beans for the map component as well as the resource bundles for the application</p>
          </li>

          <li>
            <p><code>src/main/webapp/WEB-INF/web.xml</code>: The web application configuration file</p>
          </li>
        </ul>
      </div>
    </div>
  </div>

  <div class="ind">
    <a id="GLPPQ"></a><a id="JEETT00568"></a>

    <div class="sect1">
      <h1 class="sect1"><span class="secnum">57.3</span> Running the Duke's Bookstore Case Study Application</h1>

      <p>You can use either NetBeans IDE or Maven to build, package, deploy, and run the Duke's Bookstore application.</p><a id="GLPQG"></a><a id="JEETT00294"></a>

      <div class="sect2">
        <h2 class="sect2"><span class="secnum">57.3.1</span> To Build and Deploy Duke's Bookstore Using NetBeans IDE</h2>

        <ol>
          <li>
            <p>Make sure that GlassFish Server has been started (see <a href="../Text/usingexamples.xhtml#BNADI">Starting and Stopping GlassFish Server</a>).</p>
          </li>

          <li>
            <p>From the <span class="gui-object-action">File</span> menu, choose <span class="gui-object-action">Open Project</span>.</p>
          </li>

          <li>
            <p>In the <span class="gui-object-title">Open Project</span> dialog box, navigate to:</p>
            <pre class="oac_no_warn" xml:space="preserve" xmlns:xml="http://www.w3.org/XML/1998/namespace"><span class="variable">tut-install</span>/examples/case-studies</pre>
          </li>

          <li>
            <p>Select the <code>dukes-bookstore</code> folder.</p>
          </li>

          <li>
            <p>Click <span class="gui-object-action">Open Project</span>.</p>
          </li>

          <li>
            <p>In the <span class="gui-object-action">Projects</span> tab, right-click the <code>dukes-bookstore</code> project and select <span class="gui-object-action">Build</span>.</p>

            <p>This will build, package, and deploy Duke's Bookstore to GlassFish Server.</p>
          </li>
        </ol>
      </div><a id="GLPQN"></a><a id="JEETT00295"></a>

      <div class="sect2">
        <h2 class="sect2"><span class="secnum">57.3.2</span> To Build and Deploy Duke's Bookstore Using Maven</h2>

        <ol>
          <li>
            <p>Make sure that GlassFish Server has been started (see <a href="../Text/usingexamples.xhtml#BNADI">Starting and Stopping GlassFish Server</a>), as well as the database server (see <a href="../Text/usingexamples.xhtml#BNADK">Starting and Stopping the Java DB Server</a>).</p>
          </li>

          <li>
            <p>In a terminal window, go to:</p>
            <pre class="oac_no_warn" xml:space="preserve" xmlns:xml="http://www.w3.org/XML/1998/namespace"><span class="variable">tut-install</span>/examples/case-studies/dukes-bookstore/</pre>
          </li>

          <li>
            <p>Enter the following command:</p>
            <pre class="oac_no_warn" xml:space="preserve" xmlns:xml="http://www.w3.org/XML/1998/namespace">mvn install</pre>

            <p>This command builds the application and packages it in a WAR file in the <span class="variable">tut-install</span><code>/examples/case-studies/dukes-bookstore/target/</code> directory. It then deploys the application to GlassFish Server.</p>
          </li>
        </ol>
      </div>

      <div class="sect2">
        <a id="sthref3053"></a>

        <h2 class="sect2"><span class="secnum">57.3.3</span> To Run Duke's Bookstore</h2>

        <ol>
          <li>
            <p>In a web browser, enter the following URL:</p>
            <pre class="oac_no_warn" xml:space="preserve" xmlns:xml="http://www.w3.org/XML/1998/namespace">http://localhost:8080/dukes-bookstore/</pre>
          </li>

          <li>
            <p>On the Duke's Bookstore main page, click a book in the graphic, or click one of the links at the bottom of the page.</p>
          </li>

          <li>
            <p>Use the pages in the application to view and purchase books.</p>
          </li>
        </ol>
      </div>
    </div>
  </div>
</body>
</html>
